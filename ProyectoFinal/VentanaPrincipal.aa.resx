<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>