<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="errorProvider.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAICAAAAEAIACoEAAAFgAAACgAAAAgAAAAQAAAAAEAIAAAAAAAABAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAJAAAADUVFRi8xMTExJiYmMiQkJDMgICAxGxsbMBYWFi0YGBguGhoaLR4gIC8SIB0vChkVLxod
        HTIVFBQzFRUVMxMTEzMXFxczGhoaMh8fIDEnJycvLi4uLEJCQicAAAAPAAAADAAAAAsAAAAKAAAACgAA
        AAjz8/MA8/PzABUVFRSKioo3mZqarJaYl9SGh4bVe3x81HN0dNNpamnTYGBh1FhZWdNSU1PTTlBQ1E9V
        VNRTXFrUYWNi1GVmZtNqa2vSbnBw0nR2dtJ9fn7Rh4iI046OjsNub26BR0dHSAAAABsAAAAXAAAAFQAA
        ABQAAAATAAAAEPPz8wDz8/MAAAAAEltbWyRwcXGCZGRkqFBQUL5ISEjMQ0NE2UBAQOpAQEDqPz8/6j8/
        P+o+Pj7wPz8//0hNTPdBQUHtQEBA7EBAQOxAQUHqRUVF2EdHR9dPT0/KU1VUvklQT4xNVVRNNjM0KzAw
        MCouLi4rKysrKy8vMCw3NzctcXFxIzMzMwoAAAAJPT09jT8/P/8+Pj7/Ozs8/zo6O/86Ojr/ODg5/zg4
        Of84ODn/ODg5/zU1Nv9OT1D/P09M/1VVVv84ODn/ODg5/zg4Of86Ojr/Ojo6/zs7O/87Ozz/Pj4+/z8/
        P/85ODiqHx8fRR0dHUYgICBGIyMjRi0tLUJCQkIzHR0dGQAAAAI+Pj7wRUVG/0JCQ/9BQUL/QUFC/0FB
        Qv9BQUL/QUFC/0FBQv8/P0D/TExN/15nZv8lW0//a2ts/1BQUf9AQEH/QUFC/0FBQv9BQUL/QUFC/0FB
        Qv9CQkP/QkJD/z8/P/1VVlbZV1lZ1lhZWdBcXV3Ra2trtVlaWV4UFBQaS0tMAD4+PvxSUlP/TExN/0tL
        TP9LS0z/S0tM/0tLTP9LS0z/SkpL/0hISf92dnf/THlx/zB6bP9sbm//c3N0/01OTv9KSkv/S0tM/0tL
        TP9LS0z/S0tM/0xMTf9WVlf/Pj4+/ygoKfUrKyvsLi0t5DEyMt44ODjQQkFCoicnJ1tWVlcAPj4+82Fh
        Yv9XV1j/VlZX/1ZWV/9WVlf/VlZX/1ZWV/9GRkf/fHx8/319ff9InIz/PpuK/3uAf/95eXr/eHh5/0lK
        S/9UVFX/VlZX/1ZWV/9WVlf/V1dY/3V1dv8+Pj7/ISEi/yYmJ/8rKyv/LS0t/zMzM/86Ojv/QkJD9V5e
        XgA+Pj7wfHx8/2BgYP9eXl7/Xl5e/15eXv9eXl7/RUZG/39/gP+CgoP/lpiY/2XCsf9Tuqj/pamo/39/
        f/9/f3//fX19/0NDQ/9bW1v/Xl5e/15eXv9fX1//kJCQ/z4+Pv8pKSn/LCws/zMzM/83Nzj/QEBB/0lJ
        Sv9HR0f/ZGRlAD4+PuqoqKn/aGhp/2VlZv9kZGX/ZGRl/0lKS/9/f4D/h4eI/4iIif+9xML/SK2Y/0Gq
        lf/U39z/goKC/4ODg/+Dg4P/eXl5/1ZWVv9kZGX/ZGRl/2VlZv+ysrL/Pj4+/zw8PP8vLy//PDw8/0VF
        Rv9NTU7/YmJj/1JSU/9ra2sAPj4+gVJSUv+Li4v/bm5u/2xsbP9ra2v/bm5v/4yMjf+NjY7/j4+Q/9Ln
        4v9LrJn/T6+c/9Pm4v+IiIn/h4eI/4aGh/9hYWH/a2tr/2xsbP9ubm7/jIyM/1paWv9EQ0P/TExM/0RE
        RP89PT3/UlJS/1VVVf96enr/ZWVl/3FxcQBxcXEAQEBAN0NDQ6BKSkr/fn5+/3V1df9wcHD/hYWG/5SU
        lP/n6Oj/z9PS/3Owo/96s6j/zNDP/9zd3f+VlZX/ioqK/11dXf9ycnL/c3Nz/3x8fP9NTU3/TlZU/1FP
        UP9TU1P/W1tb/09PT/9bW1z/ZGRl/4eHh/9dXV33dnZ3AHZ2dwD///8A////AD4+PkJAQECrRERE/3R0
        df+Xl5f/mJiY////////////iqK6/4qiuv/7/P3//////5WVlf+Ojo7/jIyM/1BQUP9PT0//R0pK/zVQ
        S/9ldHH/dHJz/2ZlZv9XV1f/W1tb/3BwcP92dnb/V1dX/Dk5OXl7e3wAe3t8AP///wD///8A////AP//
        /wA+Pj5FZmZmzJiZmf+cnJz/9PT0/9Lf8f+wy+7/sMvu/8PV7f/n5+j/lpaW/5GRkf9zc3P/T09P/3Z1
        df9wdXn/QVJd/3p/g/+mpqf/dHV1/35+fv9gYGD/VFRU/0lJSdE4ODheOjo6BICAgACAgIAAgICAAICA
        gACAgIAAgICAAICAgACZvu4AhISEHX5+fpWfrLz/VXWb/1+BqP9qjbb/ZIWu/3eNp/+IiIjkYWJivnBw
        cOpvb2/4jY+R/213hf9YZn7/aXaI/5ufpf+EhIT/fn5/9k9PT8s5OTleOTk5ETs7OwA7OzsAhISEAISE
        hACEhIQAhISEAISEhACEhIQAhISEAJm+7gCav+8AOVV2fklnif99o9D/kbjo/5e97P+Hq9f/R2WI/zlV
        dmCrzf4Ad3VyBmJmanRcaXr+Q1p1/01kgf9PZ4b/V2mA/G1xdqxUUlA1PTs5AD09PAA8PDwAOzs7ADs7
        OwA+Pj4APj4+AD4+PgA+Pj4APj4+AD4+PgA+Pj4Amr/vADlVdkhIZ4r/ibDg/5i76/+szPj/sc/7/6vN
        9/+UueX/R2SG/zlVdgNcZW4EN0tkjktlhP5wi67/fpi8/4aixP9VcJL4O1FqY0tTWwA8RU8A8/PzAPPz
        8wDz8/MAOzo5AD4+PgA+Pj4APj4+AD4+PgA+Pj4APj4+AD4+PgCTuekAP1t9tIKp1v+St+X/ss/5/7vW
        /v+71v7/udX9/6/Q+/+DpdD/Ql+Bay1EYD9IX3z7boeq/4eev/+ZrtD/qsTm/5++4/9XcZPZNlBvBzhT
        cwDz8/MA8/PzAPPz8wA6PkMAPj4+AD4+PgA+Pj4APj4+AD4+PgA5VXaWOVV2/zlVdv9ZeqH/jLPj/6vK
        9f++2P//wNr8/8Td/f/A2v3/uNT8/6fK9/9Oa4//OVV2/0dhgv93jq3/kqfF/6e82P+3zev/tc7w/4il
        yvo5UW7JNk5qh/Pz8wDz8/MA8/PzADlOZgDz8/MA8/PzAPPz8wDz8/MA8/PzADlVdv+p0Pb/b5Cz/3qg
        zP+Vuef/t9P8/7/Z/v/I3/7/0OT//8ng/f+91/z/r8/8/2iIr/+hx+3/OVV2/4GVs/+Xq8b/tsjf/8LV
        7f+60fD/lLDV/36bu/9bdZP/8/PzAPPz8wDz8/MAOVJvAPPz8wDz8/MA8/PzAPPz8wDz8/MAOVV29svf
        8v9fe5v/ha3b/5/C7v+51vv/v9n8/8zh/v/X5///zuP+/8Da/P+w0Pz/faHN/6vB1/85VXb/hZq2/5qs
        yP+8yuH/yNju/73S8P+bt+D/iaPA/1pwiP7z8/MA8/PzAPPz8wA5UW0A8/PzAPPz8wDz8/MA8/PzAPPz
        8wA5VXaNL0Vi+TRPcP6AqNj/o8Xz/7nV/f+92Pz/yd7+/9Dj/v/K4P7/wtv+/7DQ/P9igaz/O1d5/09p
        i/+Inbz/mq3K/7fI4v/C1e//wNXw/5m13P8/V3f6NEtnjPPz8wDz8/MA8/PzADxVcgDz8/MA8/PzAPPz
        8wDz8/MA8/PzABkkOBIZJDjtJThS/12Gtf+QtOT/ttX//7zY/v/B2v7/xN3+/8Lc//+92v//qMv6/1Jy
        m/8nOlT/U26Q/4SbvP+cs9D/scjn/7bP7/+vze//iKrW/zJHY/kiMEU58/PzAPPz8wDz8/MAKjtTAPPz
        8wDz8/MA8/PzAPPz8wDz8/MAGSQ4ihchO/8ZJTn/LVJ9/2KKu/+fw/P/t9b//7jX//+z0v3/qsv3/5q/
        7/+Cqt//SmuX/x0qQP8yTG3/Y4Ko/4yr0f+Rst3/dpjE/1Jvlv8/WXv/JjZO//Pz8wDz8/MA8/PzABok
        NgAaJDYA8/PzAPPz8wDz8/MA8/PzAPPz8wAZJDjtHShK/ys9Z/8nPV3/NWCS/2mVy/+Qt+v/jbXn/3yl
        2v9YfrH/OFd//y1GaP8pPlv/HSpA/yAtQv8sQl//P1yC/zRPcf8hMEf/IC1F/yg3UP8lM0n58/PzAPPz
        8wDz8/MAHik9AB4pPQDz8/MA8/PzAPPz8wDz8/MAGSQ4DBkkOf8vQG3/L0Jp/yQyTv8aJjv/J0Fi/zZW
        gP80W4r/IjdV/xwoPv8iMEr/KDlU/y5AXv8hL0f/L0BZ/yIvQ/8bJjv/JTRN/zRGYv88UG3/NUdi/yYz
        SLDz8/MA8/PzAPPz8wApN00AKTdNAPPz8wDz8/MA8/PzAPPz8wDz8/MAGSQ46ik5WP8xRGb/N01v/zxU
        dv8oOFH/HCk//x4rQ/8pOlf/NUpr/zlPcf89VXf/JTRN/yg4UP8iL0P/IS5D/zNFYf9EW3v/SGCC/z1T
        bv8mNErzIS1BR/Pz8wDz8/MA8/PzACMwRQAjMEUA8/PzAPPz8wDz8/MA8/PzAPPz8wAZJDhsJTRN/zhN
        bf8zSGb/IjBH/xklOf8oOFX/N01v/0Ndhf9FYYf/RF6B/y9DYP8jM0vjGSIzfh4oOqknM0n5KjlR/y49
        Vf8tO1P/JDFFzRojNE4YIDEA8/PzAPPz8wDz8/MAGCAxABggMQDz8/MA8/PzAPPz8wDz8/MA8/PzAP//
        /wAZJDh4GSQ4+xkkOPshL0f/LT9c/zZLbP89VXf/QVp8/z5Xd/8uQFr/HyxD5hkkOAn///8A////APPz
        8wDz8/MA8/PzAPPz8wDz8/MA8/PzAPPz8wDz8/MA8/PzAPPz8wDz8/MA8/PzAPPz8wDz8/MA8/PzAPPz
        8wDz8/MA////AP///wD///8AGSQ4BhsmOlkcJjvLGyY6+xwnPP8bJjv/GyY79R8sQ4YZJDgJ////AP//
        /wD///8A8/PzAPPz8wDz8/MA8/PzAPPz8wDz8/MA8/PzAPPz8wDz8/MA8/PzAPPz8wDz8/MA8/PzAPPz
        8wDz8/MA8/PzAPPz8wD///8A////AP///wD///8A////AP///wD///8AGSQ4DxkkOAn///8A////AP//
        /wD///8A////AP///wDz8/MA8/PzAPPz8wDz8/MA8/PzAPPz8wDz8/MA8/PzAPPz8wDz8/MA8/PzAPPz
        8wDz8/MA8/PzAPPz8wDz8/MA8/PzAPPz8wDz8/MA8/PzAPPz8wDz8/MA8/PzAPPz8wDz8/MA8/PzAPPz
        8wDz8/MA8/PzAPPz8wDz8/MA8/PzAPPz8wDz8/MA8/PzAPPz8wDz8/MA8/PzAPPz8wDz8/MA8/PzAPPz
        8wDz8/MA8/PzAPPz8wDz8/MA8/PzAPPz8wDz8/MA8/PzAPPz8wDz8/MA8/PzAPPz8wDz8/MA8/PzAPPz
        8wDz8/MA8/PzAPPz8wDz8/MA8/PzAPPz8wDz8/MA8/PzAPPz8wDz8/MA8/PzAPPz8wDz8/MA8/PzAPPz
        8wDz8/MA8/PzAPPz8wDz8/MAAAAAAwAAAAMAAAAAAAAAAAAAAACAAAAAgAAAAIAAAACAAAAAgAAAAMAA
        AADwAAAA/AAAAP8AAAP/gEAf/wAAP/8AAB/4AAAP+AAAD/gAAA/4AAAP+AAAD/gAAB/4AAAf8AAAH/gA
        AB/4AAA//AA///8Af///8/////////////8=
</value>
  </data>
</root>